#! /usr/bin/env ruby

Main {
  argument('config')

  option('--output', '-o'){
    argument :required
  }

  option('--format', '-f'){
    description 'pdf|html'
    argument :required
    default 'pdf'
  }

  def run
    @config = param['config'].value
    @output = param['output'].value
    @format = param['format'].value

    case @format
      when /pdf/
        msg = :to_pdf
        output = @output ? @output : 'book.pdf'
      when /html/
        msg = :to_html
        output = @output ? @output : 'book.html'
    end

    msg = "to_#{ @format }"
    out = @output ? @output : "book.#{ @format }"

    book = Bookify::Book.new(@config)
    fmt = book.send(msg)

    open(out){|fd| fd.write(fmt)}
  end

  def open(io)
    case io
      when '-'
        yield(STDOUT)
      else
        Kernel.open(io, 'w'){|fd| yield(fd)}
    end
  end
}


BEGIN {
  begin
    require 'rubygems'
  rescue LoadError
    nil
  end

  require 'main'

  begin
    require 'bookify'
  rescue LoadError
    alternate = File.expand_path(File.join(File.dirname(__FILE__), '../lib/bookify.rb'))
    raise unless test(?e, alternate)
    require alternate
  end
}
