#! /usr/bin/env ruby

Main {
  option('--config', '-c'){
    argument :required
    default{ argv.shift }
  }

  option('--output', '-o'){
    argument :required
  }

  option('--format', '-f'){
    description 'pdf|html'
    argument :required
    default 'pdf'
  }

  mode(:config){
    def run
      y Bookify::Fake.config
    end    
  }
  
  mode(:book){
    def run
      @config = param['config'].value || 'bookify.yml'
      abort('no config') unless test(?e, @config)

      @output = param['output'].value
      @format = param['format'].value
      

      msg = "to_#{ @format }"

      book = Bookify::Book.new(:config => @config)
      formatted = book.send(msg)
      output = @output || "book.#{ @format }"
      open(output){|fd| fd.write(formatted)}
    end
  }
  

  def open(io)
    case io
      when '-'
        yield(STDOUT)
      else
        Kernel.open(io, 'w'){|fd| yield(fd)}
    end
  end
}


BEGIN {
  begin
    require 'rubygems'
  rescue LoadError
    nil
  end

  require 'main'

  begin
    require 'bookify'
  rescue LoadError
    alternate = File.expand_path(File.join(File.dirname(__FILE__), '../lib/bookify.rb'))
    raise unless test(?e, alternate)
    require alternate
  end
}
